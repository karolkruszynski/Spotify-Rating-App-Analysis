{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2455cd2e",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:22.926614Z",
     "iopub.status.busy": "2024-04-22T10:44:22.925956Z",
     "iopub.status.idle": "2024-04-22T10:44:26.239802Z",
     "shell.execute_reply": "2024-04-22T10:44:26.237557Z"
    },
    "papermill": {
     "duration": 3.331478,
     "end_time": "2024-04-22T10:44:26.245068",
     "exception": false,
     "start_time": "2024-04-22T10:44:22.913590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/spotify-app-reviews-2022/reviews.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b04031d9",
   "metadata": {
    "papermill": {
     "duration": 0.013473,
     "end_time": "2024-04-22T10:44:26.270108",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.256635",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Read the dataset**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ef153827",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:26.296486Z",
     "iopub.status.busy": "2024-04-22T10:44:26.295560Z",
     "iopub.status.idle": "2024-04-22T10:44:26.808538Z",
     "shell.execute_reply": "2024-04-22T10:44:26.806956Z"
    },
    "papermill": {
     "duration": 0.528881,
     "end_time": "2024-04-22T10:44:26.811787",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.282906",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/spotify-app-reviews-2022/reviews.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd9f17bb",
   "metadata": {
    "papermill": {
     "duration": 0.008964,
     "end_time": "2024-04-22T10:44:26.831926",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.822962",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "29c6c62a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:26.853905Z",
     "iopub.status.busy": "2024-04-22T10:44:26.852893Z",
     "iopub.status.idle": "2024-04-22T10:44:26.916125Z",
     "shell.execute_reply": "2024-04-22T10:44:26.914127Z"
    },
    "papermill": {
     "duration": 0.078227,
     "end_time": "2024-04-22T10:44:26.919422",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.841195",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 61594 entries, 0 to 61593\n",
      "Data columns (total 5 columns):\n",
      " #   Column          Non-Null Count  Dtype \n",
      "---  ------          --------------  ----- \n",
      " 0   Time_submitted  61594 non-null  object\n",
      " 1   Review          61594 non-null  object\n",
      " 2   Rating          61594 non-null  int64 \n",
      " 3   Total_thumbsup  61594 non-null  int64 \n",
      " 4   Reply           216 non-null    object\n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 2.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "902a7019",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:26.942464Z",
     "iopub.status.busy": "2024-04-22T10:44:26.941653Z",
     "iopub.status.idle": "2024-04-22T10:44:26.977968Z",
     "shell.execute_reply": "2024-04-22T10:44:26.977137Z"
    },
    "papermill": {
     "duration": 0.050449,
     "end_time": "2024-04-22T10:44:26.980073",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.929624",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>61594.000000</td>\n",
       "      <td>61594.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.155989</td>\n",
       "      <td>7.649381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.673285</td>\n",
       "      <td>89.323143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>8195.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Rating  Total_thumbsup\n",
       "count  61594.000000    61594.000000\n",
       "mean       3.155989        7.649381\n",
       "std        1.673285       89.323143\n",
       "min        1.000000        0.000000\n",
       "25%        1.000000        0.000000\n",
       "50%        3.000000        0.000000\n",
       "75%        5.000000        1.000000\n",
       "max        5.000000     8195.000000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bf4618d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.003642Z",
     "iopub.status.busy": "2024-04-22T10:44:27.002858Z",
     "iopub.status.idle": "2024-04-22T10:44:27.012690Z",
     "shell.execute_reply": "2024-04-22T10:44:27.010515Z"
    },
    "papermill": {
     "duration": 0.025296,
     "end_time": "2024-04-22T10:44:27.016062",
     "exception": false,
     "start_time": "2024-04-22T10:44:26.990766",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Time_submitted', 'Review', 'Rating', 'Total_thumbsup', 'Reply'], dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e40274dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.039443Z",
     "iopub.status.busy": "2024-04-22T10:44:27.038889Z",
     "iopub.status.idle": "2024-04-22T10:44:27.052408Z",
     "shell.execute_reply": "2024-04-22T10:44:27.051480Z"
    },
    "papermill": {
     "duration": 0.027625,
     "end_time": "2024-04-22T10:44:27.054718",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.027093",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time_submitted</th>\n",
       "      <th>Review</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "      <th>Reply</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-07-09 15:00:00</td>\n",
       "      <td>Great music service, the audio is high quality...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-07-09 14:21:22</td>\n",
       "      <td>Please ignore previous negative rating. This a...</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-07-09 13:27:32</td>\n",
       "      <td>This pop-up \"Get the best Spotify experience o...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-09 13:26:45</td>\n",
       "      <td>Really buggy and terrible to use as of recently</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-07-09 13:20:49</td>\n",
       "      <td>Dear Spotify why do I get songs that I didn't ...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Time_submitted                                             Review  \\\n",
       "0  2022-07-09 15:00:00  Great music service, the audio is high quality...   \n",
       "1  2022-07-09 14:21:22  Please ignore previous negative rating. This a...   \n",
       "2  2022-07-09 13:27:32  This pop-up \"Get the best Spotify experience o...   \n",
       "3  2022-07-09 13:26:45    Really buggy and terrible to use as of recently   \n",
       "4  2022-07-09 13:20:49  Dear Spotify why do I get songs that I didn't ...   \n",
       "\n",
       "   Rating  Total_thumbsup Reply  \n",
       "0       5               2   NaN  \n",
       "1       5               1   NaN  \n",
       "2       4               0   NaN  \n",
       "3       1               1   NaN  \n",
       "4       1               1   NaN  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ad2bc427",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.077912Z",
     "iopub.status.busy": "2024-04-22T10:44:27.077421Z",
     "iopub.status.idle": "2024-04-22T10:44:27.105342Z",
     "shell.execute_reply": "2024-04-22T10:44:27.103340Z"
    },
    "papermill": {
     "duration": 0.042576,
     "end_time": "2024-04-22T10:44:27.107617",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.065041",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time_submitted        0\n",
       "Review                0\n",
       "Rating                0\n",
       "Total_thumbsup        0\n",
       "Reply             61378\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cd4d4f69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.135811Z",
     "iopub.status.busy": "2024-04-22T10:44:27.135269Z",
     "iopub.status.idle": "2024-04-22T10:44:27.220287Z",
     "shell.execute_reply": "2024-04-22T10:44:27.218330Z"
    },
    "papermill": {
     "duration": 0.104585,
     "end_time": "2024-04-22T10:44:27.223768",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.119183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "081734b9",
   "metadata": {
    "papermill": {
     "duration": 0.010941,
     "end_time": "2024-04-22T10:44:27.245333",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.234392",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**I delete the column 'Reply' because it has a lot of null values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fa7c8c6a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.267459Z",
     "iopub.status.busy": "2024-04-22T10:44:27.267007Z",
     "iopub.status.idle": "2024-04-22T10:44:27.280469Z",
     "shell.execute_reply": "2024-04-22T10:44:27.278078Z"
    },
    "papermill": {
     "duration": 0.028458,
     "end_time": "2024-04-22T10:44:27.283950",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.255492",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['Reply'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e1e200ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.309260Z",
     "iopub.status.busy": "2024-04-22T10:44:27.308806Z",
     "iopub.status.idle": "2024-04-22T10:44:27.321145Z",
     "shell.execute_reply": "2024-04-22T10:44:27.319119Z"
    },
    "papermill": {
     "duration": 0.028787,
     "end_time": "2024-04-22T10:44:27.324232",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.295445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time_submitted</th>\n",
       "      <th>Review</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-07-09 15:00:00</td>\n",
       "      <td>Great music service, the audio is high quality...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-07-09 14:21:22</td>\n",
       "      <td>Please ignore previous negative rating. This a...</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-07-09 13:27:32</td>\n",
       "      <td>This pop-up \"Get the best Spotify experience o...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-09 13:26:45</td>\n",
       "      <td>Really buggy and terrible to use as of recently</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-07-09 13:20:49</td>\n",
       "      <td>Dear Spotify why do I get songs that I didn't ...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Time_submitted                                             Review  \\\n",
       "0  2022-07-09 15:00:00  Great music service, the audio is high quality...   \n",
       "1  2022-07-09 14:21:22  Please ignore previous negative rating. This a...   \n",
       "2  2022-07-09 13:27:32  This pop-up \"Get the best Spotify experience o...   \n",
       "3  2022-07-09 13:26:45    Really buggy and terrible to use as of recently   \n",
       "4  2022-07-09 13:20:49  Dear Spotify why do I get songs that I didn't ...   \n",
       "\n",
       "   Rating  Total_thumbsup  \n",
       "0       5               2  \n",
       "1       5               1  \n",
       "2       4               0  \n",
       "3       1               1  \n",
       "4       1               1  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e16f9f55",
   "metadata": {
    "papermill": {
     "duration": 0.010324,
     "end_time": "2024-04-22T10:44:27.345482",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.335158",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Checking the distribution of Ratings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fdab23df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.371679Z",
     "iopub.status.busy": "2024-04-22T10:44:27.371131Z",
     "iopub.status.idle": "2024-04-22T10:44:27.384790Z",
     "shell.execute_reply": "2024-04-22T10:44:27.383766Z"
    },
    "papermill": {
     "duration": 0.02988,
     "end_time": "2024-04-22T10:44:27.386905",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.357025",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rating\n",
       "5    22095\n",
       "1    17653\n",
       "4     7842\n",
       "2     7118\n",
       "3     6886\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings = df['Rating'].value_counts()\n",
    "ratings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c00c361b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.411762Z",
     "iopub.status.busy": "2024-04-22T10:44:27.411239Z",
     "iopub.status.idle": "2024-04-22T10:44:27.781654Z",
     "shell.execute_reply": "2024-04-22T10:44:27.779550Z"
    },
    "papermill": {
     "duration": 0.386881,
     "end_time": "2024-04-22T10:44:27.784393",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.397512",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=ratings.index, y=ratings.values, palette='mako', edgecolor='black', linewidth=1, width=0.5, alpha=0.7)\n",
    "sns.set(rc={'figure.figsize':(10,5)})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8663d37f",
   "metadata": {
    "papermill": {
     "duration": 0.010615,
     "end_time": "2024-04-22T10:44:27.805969",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.795354",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**We can see that most of the reviews have a rating of 5 and secondly have a rating of 1, people are usually love or hate the app / app updates**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59d29e1c",
   "metadata": {
    "papermill": {
     "duration": 0.010669,
     "end_time": "2024-04-22T10:44:27.827708",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.817039",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Looking at the distribution of thumbs up"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2751ca0",
   "metadata": {
    "papermill": {
     "duration": 0.010776,
     "end_time": "2024-04-22T10:44:27.849544",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.838768",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Sum of thumbs up**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e8ce0e09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:27.874418Z",
     "iopub.status.busy": "2024-04-22T10:44:27.873605Z",
     "iopub.status.idle": "2024-04-22T10:44:27.885328Z",
     "shell.execute_reply": "2024-04-22T10:44:27.883437Z"
    },
    "papermill": {
     "duration": 0.027715,
     "end_time": "2024-04-22T10:44:27.888428",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.860713",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "471156"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum_of_thumbsup = df['Total_thumbsup'].sum()\n",
    "sum_of_thumbsup"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82fbda35",
   "metadata": {
    "papermill": {
     "duration": 0.010731,
     "end_time": "2024-04-22T10:44:27.910671",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.899940",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**The sum of thumbs up per rating**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8fb3d8a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.027476Z",
     "iopub.status.busy": "2024-04-22T10:44:28.027047Z",
     "iopub.status.idle": "2024-04-22T10:44:28.038441Z",
     "shell.execute_reply": "2024-04-22T10:44:28.037400Z"
    },
    "papermill": {
     "duration": 0.119705,
     "end_time": "2024-04-22T10:44:28.041634",
     "exception": false,
     "start_time": "2024-04-22T10:44:27.921929",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rating\n",
       "1    150449\n",
       "2     73694\n",
       "3     90715\n",
       "4     85137\n",
       "5     71161\n",
       "Name: Total_thumbsup, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum_of_thumbsup_gp_rating = df.groupby('Rating')['Total_thumbsup'].sum()\n",
    "sum_of_thumbsup_gp_rating"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2b171abc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.066277Z",
     "iopub.status.busy": "2024-04-22T10:44:28.065818Z",
     "iopub.status.idle": "2024-04-22T10:44:28.321981Z",
     "shell.execute_reply": "2024-04-22T10:44:28.321097Z"
    },
    "papermill": {
     "duration": 0.271211,
     "end_time": "2024-04-22T10:44:28.324145",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.052934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Rating'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=sum_of_thumbsup_gp_rating.index, y=sum_of_thumbsup_gp_rating.values)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f53839c",
   "metadata": {
    "papermill": {
     "duration": 0.011256,
     "end_time": "2024-04-22T10:44:28.347378",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.336122",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**As we can see, more sum of thumbs up get the comments where rating is 1. We can assume that more often users agree with negative app reviews than extremely positive ones**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec74637e",
   "metadata": {
    "papermill": {
     "duration": 0.010858,
     "end_time": "2024-04-22T10:44:28.369951",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.359093",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Analysis of the date of comments"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d41b4301",
   "metadata": {
    "papermill": {
     "duration": 0.010894,
     "end_time": "2024-04-22T10:44:28.392414",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.381520",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Separate the date from the time to column Date**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1046908e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.417228Z",
     "iopub.status.busy": "2024-04-22T10:44:28.416748Z",
     "iopub.status.idle": "2024-04-22T10:44:28.456556Z",
     "shell.execute_reply": "2024-04-22T10:44:28.455164Z"
    },
    "papermill": {
     "duration": 0.055677,
     "end_time": "2024-04-22T10:44:28.459464",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.403787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Date'] = pd.to_datetime(df['Time_submitted'])\n",
    "df['Date'] = df['Date'].dt.date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b4001a40",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.485554Z",
     "iopub.status.busy": "2024-04-22T10:44:28.484497Z",
     "iopub.status.idle": "2024-04-22T10:44:28.495783Z",
     "shell.execute_reply": "2024-04-22T10:44:28.494877Z"
    },
    "papermill": {
     "duration": 0.026537,
     "end_time": "2024-04-22T10:44:28.497944",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.471407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time_submitted</th>\n",
       "      <th>Review</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-07-09 15:00:00</td>\n",
       "      <td>Great music service, the audio is high quality...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2022-07-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-07-09 14:21:22</td>\n",
       "      <td>Please ignore previous negative rating. This a...</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2022-07-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-07-09 13:27:32</td>\n",
       "      <td>This pop-up \"Get the best Spotify experience o...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-07-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-09 13:26:45</td>\n",
       "      <td>Really buggy and terrible to use as of recently</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2022-07-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-07-09 13:20:49</td>\n",
       "      <td>Dear Spotify why do I get songs that I didn't ...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2022-07-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Time_submitted                                             Review  \\\n",
       "0  2022-07-09 15:00:00  Great music service, the audio is high quality...   \n",
       "1  2022-07-09 14:21:22  Please ignore previous negative rating. This a...   \n",
       "2  2022-07-09 13:27:32  This pop-up \"Get the best Spotify experience o...   \n",
       "3  2022-07-09 13:26:45    Really buggy and terrible to use as of recently   \n",
       "4  2022-07-09 13:20:49  Dear Spotify why do I get songs that I didn't ...   \n",
       "\n",
       "   Rating  Total_thumbsup        Date  \n",
       "0       5               2  2022-07-09  \n",
       "1       5               1  2022-07-09  \n",
       "2       4               0  2022-07-09  \n",
       "3       1               1  2022-07-09  \n",
       "4       1               1  2022-07-09  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "81189bc2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.525044Z",
     "iopub.status.busy": "2024-04-22T10:44:28.524571Z",
     "iopub.status.idle": "2024-04-22T10:44:28.540391Z",
     "shell.execute_reply": "2024-04-22T10:44:28.539370Z"
    },
    "papermill": {
     "duration": 0.032667,
     "end_time": "2024-04-22T10:44:28.543215",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.510548",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date\n",
       "2022-01-01     46\n",
       "2022-01-02     43\n",
       "2022-01-03     66\n",
       "2022-01-04     56\n",
       "2022-01-05     64\n",
       "             ... \n",
       "2022-07-05    454\n",
       "2022-07-06    467\n",
       "2022-07-07    476\n",
       "2022-07-08    487\n",
       "2022-07-09    250\n",
       "Name: Rating, Length: 190, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "date_comments = df.groupby('Date')['Rating'].count()\n",
    "date_comments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1be9d347",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:28.570113Z",
     "iopub.status.busy": "2024-04-22T10:44:28.569614Z",
     "iopub.status.idle": "2024-04-22T10:44:29.050968Z",
     "shell.execute_reply": "2024-04-22T10:44:29.049909Z"
    },
    "papermill": {
     "duration": 0.498206,
     "end_time": "2024-04-22T10:44:29.053893",
     "exception": false,
     "start_time": "2024-04-22T10:44:28.555687",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/1779879735.py:1: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.\n",
      "  sns.lineplot(x=date_comments.index, y=date_comments.values, palette='mako', linewidth=1.5)\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Date'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(x=date_comments.index, y=date_comments.values, palette='mako', linewidth=1.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "543f1366",
   "metadata": {
    "papermill": {
     "duration": 0.014119,
     "end_time": "2024-04-22T10:44:29.083883",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.069764",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**As we can see, a sudden increase in the number of comments occurred in early March 2022r and in mid-April to May 2022.**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a439677",
   "metadata": {
    "papermill": {
     "duration": 0.012884,
     "end_time": "2024-04-22T10:44:29.111122",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.098238",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Checking for Date column type**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f3442c43",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.144587Z",
     "iopub.status.busy": "2024-04-22T10:44:29.144050Z",
     "iopub.status.idle": "2024-04-22T10:44:29.152411Z",
     "shell.execute_reply": "2024-04-22T10:44:29.150599Z"
    },
    "papermill": {
     "duration": 0.029814,
     "end_time": "2024-04-22T10:44:29.155837",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.126023",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'].dtype"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51d662f2",
   "metadata": {
    "papermill": {
     "duration": 0.012979,
     "end_time": "2024-04-22T10:44:29.182896",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.169917",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Change the Date column type to datetime**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3f444dfb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.211993Z",
     "iopub.status.busy": "2024-04-22T10:44:29.211498Z",
     "iopub.status.idle": "2024-04-22T10:44:29.228582Z",
     "shell.execute_reply": "2024-04-22T10:44:29.226619Z"
    },
    "papermill": {
     "duration": 0.035938,
     "end_time": "2024-04-22T10:44:29.232129",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.196191",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5bf4e70c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.261517Z",
     "iopub.status.busy": "2024-04-22T10:44:29.260961Z",
     "iopub.status.idle": "2024-04-22T10:44:29.271711Z",
     "shell.execute_reply": "2024-04-22T10:44:29.269892Z"
    },
    "papermill": {
     "duration": 0.02893,
     "end_time": "2024-04-22T10:44:29.274778",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.245848",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('<M8[ns]')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'].dtype"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c20f078",
   "metadata": {
    "papermill": {
     "duration": 0.013176,
     "end_time": "2024-04-22T10:44:29.301209",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.288033",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Let's check the comments from 03/01/2022 to 04/01/2022 where the increase in the number of comments occurred**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "48862a69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.330456Z",
     "iopub.status.busy": "2024-04-22T10:44:29.330032Z",
     "iopub.status.idle": "2024-04-22T10:44:29.353034Z",
     "shell.execute_reply": "2024-04-22T10:44:29.351243Z"
    },
    "papermill": {
     "duration": 0.042435,
     "end_time": "2024-04-22T10:44:29.356547",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.314112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time_submitted</th>\n",
       "      <th>Review</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>40673</th>\n",
       "      <td>2022-04-01 23:57:54</td>\n",
       "      <td>I downloaded songs to listen offline. What's t...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40674</th>\n",
       "      <td>2022-04-01 23:35:12</td>\n",
       "      <td>Very user unfriendly. Will not show same mater...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40675</th>\n",
       "      <td>2022-04-01 23:32:04</td>\n",
       "      <td>Excellent music and easy to navigate, highly r...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40676</th>\n",
       "      <td>2022-04-01 23:31:14</td>\n",
       "      <td>App would close out the moment you open it. Yo...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40677</th>\n",
       "      <td>2022-04-01 23:29:47</td>\n",
       "      <td>If you chose to eliminate Lowkey singer i have...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Time_submitted                                             Review  \\\n",
       "40673  2022-04-01 23:57:54  I downloaded songs to listen offline. What's t...   \n",
       "40674  2022-04-01 23:35:12  Very user unfriendly. Will not show same mater...   \n",
       "40675  2022-04-01 23:32:04  Excellent music and easy to navigate, highly r...   \n",
       "40676  2022-04-01 23:31:14  App would close out the moment you open it. Yo...   \n",
       "40677  2022-04-01 23:29:47  If you chose to eliminate Lowkey singer i have...   \n",
       "\n",
       "       Rating  Total_thumbsup       Date  \n",
       "40673       1               0 2022-04-01  \n",
       "40674       1               0 2022-04-01  \n",
       "40675       5               0 2022-04-01  \n",
       "40676       2               0 2022-04-01  \n",
       "40677       1               0 2022-04-01  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comments_03_04_2022 = df[(df['Date'] > '2022-03-01') & (df['Date'] <= '2022-04-01')]\n",
    "comments_03_04_2022.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fe6b9707",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.385241Z",
     "iopub.status.busy": "2024-04-22T10:44:29.384717Z",
     "iopub.status.idle": "2024-04-22T10:44:29.396854Z",
     "shell.execute_reply": "2024-04-22T10:44:29.395145Z"
    },
    "papermill": {
     "duration": 0.030696,
     "end_time": "2024-04-22T10:44:29.400702",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.370006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rating\n",
       "1    2503\n",
       "2     929\n",
       "3     865\n",
       "4    1070\n",
       "5    2639\n",
       "Name: Rating, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comments_03_04_2022.groupby('Rating')['Rating'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "20f3dff0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.430674Z",
     "iopub.status.busy": "2024-04-22T10:44:29.430243Z",
     "iopub.status.idle": "2024-04-22T10:44:29.672862Z",
     "shell.execute_reply": "2024-04-22T10:44:29.671618Z"
    },
    "papermill": {
     "duration": 0.262259,
     "end_time": "2024-04-22T10:44:29.677490",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.415231",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Rating', ylabel='count'>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(x=comments_03_04_2022['Rating'], palette='mako', edgecolor='black', linewidth=1, width=0.5, alpha=0.7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3831aac5",
   "metadata": {
    "papermill": {
     "duration": 0.013705,
     "end_time": "2024-04-22T10:44:29.705765",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.692060",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**We can see that during the period of sudden increase in comments, the distribution occurs almost similarly for the rating of 1 and 5. We can say that the likely update of the Spotify app was met with divided enthusiasm between supporters and opponents**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "cb28a714",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.739826Z",
     "iopub.status.busy": "2024-04-22T10:44:29.738366Z",
     "iopub.status.idle": "2024-04-22T10:44:29.757113Z",
     "shell.execute_reply": "2024-04-22T10:44:29.755978Z"
    },
    "papermill": {
     "duration": 0.037989,
     "end_time": "2024-04-22T10:44:29.759658",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.721669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time_submitted</th>\n",
       "      <th>Review</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Total_thumbsup</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27079</th>\n",
       "      <td>2022-04-30 23:56:27</td>\n",
       "      <td>I love Spotify becuse it shows all the songs i...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2022-04-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27080</th>\n",
       "      <td>2022-04-30 23:49:56</td>\n",
       "      <td>Gives you the ability to listen to a plethora ...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27081</th>\n",
       "      <td>2022-04-30 23:47:21</td>\n",
       "      <td>I loved the app however for the past months it...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27082</th>\n",
       "      <td>2022-04-30 23:45:25</td>\n",
       "      <td>App keeps closing, after like 6 to 8 songs and...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27083</th>\n",
       "      <td>2022-04-30 23:36:04</td>\n",
       "      <td>While on vacation, Spotify is great for provid...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2022-04-30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Time_submitted                                             Review  \\\n",
       "27079  2022-04-30 23:56:27  I love Spotify becuse it shows all the songs i...   \n",
       "27080  2022-04-30 23:49:56  Gives you the ability to listen to a plethora ...   \n",
       "27081  2022-04-30 23:47:21  I loved the app however for the past months it...   \n",
       "27082  2022-04-30 23:45:25  App keeps closing, after like 6 to 8 songs and...   \n",
       "27083  2022-04-30 23:36:04  While on vacation, Spotify is great for provid...   \n",
       "\n",
       "       Rating  Total_thumbsup       Date  \n",
       "27079       5               2 2022-04-30  \n",
       "27080       5               0 2022-04-30  \n",
       "27081       3               0 2022-04-30  \n",
       "27082       3               0 2022-04-30  \n",
       "27083       5               0 2022-04-30  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comments_04_05_2022 = df[(df['Date'] > '2022-04-01') & (df['Date'] < '2022-05-01')]\n",
    "comments_04_05_2022.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "040d0048",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.790482Z",
     "iopub.status.busy": "2024-04-22T10:44:29.789966Z",
     "iopub.status.idle": "2024-04-22T10:44:29.801368Z",
     "shell.execute_reply": "2024-04-22T10:44:29.798943Z"
    },
    "papermill": {
     "duration": 0.030268,
     "end_time": "2024-04-22T10:44:29.804383",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.774115",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Rating\n",
       "1    4518\n",
       "2    2141\n",
       "3    1787\n",
       "4    1406\n",
       "5    3742\n",
       "Name: Rating, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comments_04_05_2022.groupby('Rating')['Rating'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "af222ec6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:29.835875Z",
     "iopub.status.busy": "2024-04-22T10:44:29.835371Z",
     "iopub.status.idle": "2024-04-22T10:44:30.092145Z",
     "shell.execute_reply": "2024-04-22T10:44:30.090592Z"
    },
    "papermill": {
     "duration": 0.27645,
     "end_time": "2024-04-22T10:44:30.095472",
     "exception": false,
     "start_time": "2024-04-22T10:44:29.819022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Rating', ylabel='count'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(x=comments_04_05_2022['Rating'], palette='mako', edgecolor='black', linewidth=1, width=0.5, alpha=0.7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5287c7aa",
   "metadata": {
    "papermill": {
     "duration": 0.014381,
     "end_time": "2024-04-22T10:44:30.124812",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.110431",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**On the other hand, for the period from April to May, we can see a preponderance of negative ratings with a majority of 1 over 5 ratings.**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a31c3c5",
   "metadata": {
    "papermill": {
     "duration": 0.015079,
     "end_time": "2024-04-22T10:44:30.155269",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.140190",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Short word 'Love' and 'Hate' appear in the comments analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "80157cf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:30.186821Z",
     "iopub.status.busy": "2024-04-22T10:44:30.186427Z",
     "iopub.status.idle": "2024-04-22T10:44:30.254694Z",
     "shell.execute_reply": "2024-04-22T10:44:30.252694Z"
    },
    "papermill": {
     "duration": 0.087292,
     "end_time": "2024-04-22T10:44:30.257691",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.170399",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7602"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_love_word = df['Review'].str.count('love').sum()\n",
    "count_love_word"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "1ef3825e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:30.293768Z",
     "iopub.status.busy": "2024-04-22T10:44:30.293292Z",
     "iopub.status.idle": "2024-04-22T10:44:30.349078Z",
     "shell.execute_reply": "2024-04-22T10:44:30.348087Z"
    },
    "papermill": {
     "duration": 0.0755,
     "end_time": "2024-04-22T10:44:30.351210",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.275710",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1563"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_hate_word = df['Review'].str.count('hate').sum()\n",
    "count_hate_word"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6d396d73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-22T10:44:30.383109Z",
     "iopub.status.busy": "2024-04-22T10:44:30.382607Z",
     "iopub.status.idle": "2024-04-22T10:44:30.592885Z",
     "shell.execute_reply": "2024-04-22T10:44:30.590925Z"
    },
    "papermill": {
     "duration": 0.230346,
     "end_time": "2024-04-22T10:44:30.596356",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.366010",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n",
      "  order = pd.unique(vector)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(x=['Love', 'Hate'], y=[count_love_word, count_hate_word], palette='mako', edgecolor='black', linewidth=1, width=0.5, alpha=0.7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4607c8d9",
   "metadata": {
    "papermill": {
     "duration": 0.014323,
     "end_time": "2024-04-22T10:44:30.625765",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.611442",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**As we can see, by far the word love appears more often in the comments than hate. Which may indicate the more frequent occurrence of positive comments on the application**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d7d0b477",
   "metadata": {
    "papermill": {
     "duration": 0.015642,
     "end_time": "2024-04-22T10:44:30.657278",
     "exception": false,
     "start_time": "2024-04-22T10:44:30.641636",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2331118,
     "sourceId": 3926359,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.522975,
   "end_time": "2024-04-22T10:44:31.600547",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-22T10:44:19.077572",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
